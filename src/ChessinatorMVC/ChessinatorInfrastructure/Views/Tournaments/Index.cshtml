@model IEnumerable<ChessinatorDomain.Model.Tournament>

@{
    ViewData["Title"] = "Index";
    var ParticipationSuccess = TempData["Success"] as string;
    var Error = TempData["Error"] as string;
}
<div id="participationToast" class="toast position-fixed top-0 end-0 m-3 align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
        <div class="toast-body">
            @ParticipationSuccess
        </div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
</div>
<div id="errorToast" class="toast position-fixed top-0 end-0 m-3 align-items-center text-bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
        <div class="toast-body">
            @Error
        </div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
</div>

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsOnline)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsOpen)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlayerLimit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RoundCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Link)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Organizer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TimeControl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TournamentType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Venue)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsOnline)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsOpen)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlayerLimit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoundCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Link)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Organizer.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimeControl.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TournamentType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Venue.Adress)
                </td>
                <td>
                    @if (User.IsInRole("player"))
                    {
                        var joinedIds = ViewBag.JoinedTournamentIds as List<int> ?? new List<int>();
                        bool alreadyParticipating = joinedIds.Contains(item.Id);
                        @if (!alreadyParticipating){
                            @using (Html.BeginForm("Participate", "Tournaments", FormMethod.Post)){
                                @Html.AntiForgeryToken()
                                @Html.Hidden("tournamentId", @item.Id)
                                @Html.Hidden("tournamentName", @item.Name)
                                <button type="submit" class="btn btn-primary")>
                                    Приєднатись
                                </button>
                            }
                        }
                        else
                        {
                            @using (Html.BeginForm("Disparticipate", "Tournaments", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("tournamentId", @item.Id)
                                @Html.Hidden("tournamentName", @item.Name)
                                <button type="submit" class="btn btn-primary" )>
                                    Від'єднатсь
                                </button>
                            }
                        }


                    }

                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> | 
                    <a asp-action="PlayerDetails" asp-route-id="@item.Id">Гравці</a>
            </td>
        </tr>
}
    </tbody>
</table>

@if (!string.IsNullOrEmpty(ParticipationSuccess) || !string.IsNullOrEmpty(Error))
{
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
        @if (!string.IsNullOrEmpty(ParticipationSuccess))
        {
            <text>
                    var toastEl = document.getElementById('participationToast');
                    var toast = new bootstrap.Toast(toastEl);
                    toast.show();
            </text>
        }
        else
        {
            <text>
                    var toastEl = document.getElementById('errorToast');
                    var toast = new bootstrap.Toast(toastEl);
                    toast.show();
            </text>
        }
        });
    </script>
}